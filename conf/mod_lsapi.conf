LoadModule lsapi_module /etc/httpd/modules/mod_lsapi.so

<IfModule lsapi_module>

lsapi_engine On

<FilesMatch "\.(php|php4|php5|php53|php54|php55|php56|php6|phtml)$">
#AddType application/x-httpd-lsphp .php .php4 .php5 .php53 .php54 .php55 .php56 .php6 .phtml
#AddHandler application/x-httpd-lsphp .php .php4 .php5 .php53 .php54 .php55 .php56 .php6 .phtml
</FilesMatch>


# Timeout to connect to backend, in usec.
# Optional, default value is 500000.
# Should be more than 0.
# In the case of wrong format default value will be used.
# lsapi_backend_connect_timeout 500000

# Number of tries to connect to backend.
# Optional, default value is 20.
# Should be more than 0.
# In the case of wrong format default value will be used.
# lsapi_backend_connect_tries 20

# Maximum number of simultaneously running child backend processes.
# Optional, default value is 120.
# Should be more than 1.
# In the case of wrong format default value will be used.
# In the case of value more than 10000, 10000 will be used.
# lsapi_backend_children 120

# How long an control backend process will wait for a new request before it exits, in sec.
# 0 stands for infinite.
# Optional, default value is 30.
# Should be more or equal to 0.
# In the case of wrong format default value will be used.
# lsapi_backend_pgrp_max_idle 30

# How long a backend child process will wait for a new request before it exits, in sec.
# 0 stands for infinite.
# Optional, default value is 300.
# Should be more or equal to 0.
# In the case of wrong format default value will be used.
# lsapi_backend_max_idle 300

# The maximum processing time allowed when processing a request, in sec.
# Optional, default value is 300.
# Should be more than 0.
# In the case of wrong format default value will be used.
# lsapi_backend_max_process_time 300

# How many requests each child process will handle before it exits automatically.
# Optional, default value is 10000.
# Should be more than 0.
# In the case of wrong format default value will be used.
# lsapi_backend_max_reqs 10000

# Default value is On.
# lsapi_terminate_backends_on_exit On

# Default value is /var/run/mod_lsapi
# lsapi_socket_path /var/run/mod_lsapi


# The value of PHPRC env variable.
# Special values are "No" and "Auto".
# Default value is "No" - without PHPRC at all.
# "Auto" value stands for DocumentRoot of the corresponding VirtualHost.
# "Env" value for using PHPRC from the environment, to set it with SetEnv config option, for example
# lsapi_phprc No
# lsapi_phprc Auto
# lsapi_phprc Env
# lsapi_phprc /etc/

lsapi_debug Off

# Optional, default value is On.
# Check or not owner of DOCUMENT_ROOT.
# lsapi_check_document_root On

# Optional, default value is Off.
# Check or not owner of target script.
# lsapi_target_perm Off

# Optional, default value is Off.
# Check or not permissions of target script.
# lsapi_paranoid Off

# Optional, default value is On.
# Use or not apache uid/gid for request as fallback.
# lsapi_use_default_uid On


# uid/gid for requests
# lsapi_uid_gid 500 501
# or user/group for requests instead of lsapi_uid_gid
# lsapi_user_group user1 user1

# Backend core dump enabled or not.
# Print to error_log stacktrace and 'lsof' output for runaway process
# and before it is killed
# Default is Off
# lsapi_backend_coredump Off

# Option is ignored. It exists for backward compatibility only.
# lsapi_selfstarter On

# Timeout to poll backend.
# Optional, default value is 0.
# Should be >= 0.
# In the case of wrong format default value will be used.
# 0 stands for infinite poll.
# lsapi_poll_timeout 0

# Enable or disable processing of the following directives:
#     php_value, php_flag, php_admin_value, php_admin_flag
# Optional, default value is On.
# lsapi_mod_php_behaviour On

# Use or not suexec to target user.
# Default is On
# lsapi_use_suexec On


# When On, invoke backend not per VirtualHost but per account.
# Default value is Off
# It is possible, for example, to set it to On in global config file 
# and to Off in config files of some particular Virtual Hosts.
# Then these Virtual Hosts will have a dedicated backend process,
# while others will have backend processes shared on account basis.
# lsapi_per_user Off

# Switch LSAPI_ACCEPT_NOTIFY mode for lsphp.
# This option can be used both in Global and VirtualHost scopes.
# Optional, default value is On.
# This mode is incompatible with PHP 4.4
# lsapi_backend_accept_notify On

# Whether to resend request when lsapi backend worker occasionally crashes
# lsapi_resend_if_crashed 2

# Maximum buffer in KiB to resend for request that has a body (like POST request body)
# lsapi_max_resend_buffer 200

# Resend request works only for http methods in comma separated list
# lsapi_resend_if_method GET,OPTIONS,HEAD,CONNECT,PROPFIND

# Connection pool mode
# Default value if Off.
# lsapi_with_connection_pool Off

# Set variables in backend environment.
# Environment variables PATH, HTTP_* and LSAPI_* will be ignored.
# Special case: value begins with ${ and ends with }
# Value from the original environment willl be used. For example:
# lsapi_set_env ORIG_PATH "${PATH}"
lsapi_set_env TEMP "/tmp"
lsapi_set_env TMP "/tmp"
lsapi_set_env TMPDIR "/tmp"


# Dedicated option to set PATH variable in backend environment.
# Default path /usr/local/bin:/usr/bin:/bin will be used if not set.
# lsapi_set_env_path /usr/local/bin:/usr/bin:/bin

# If Off, use Apache error log file for backend output, or separate file otherwise.
# Default value is Off
# lsapi_backend_use_own_log Off

# LSAPIPath - Set template of path
# No default value
# LSAPIPath /storage/content/[0-9]/([^/])/

# For Apache 2.4 - mechanism of the mutex used by mod_lsapi is posixsem
# Default mechanism is posixmem.
# Mutex posixsem lsapi-pipe

# For Apache 2.2 - mechanism of the mutex used by mod_lsapi.
# Default value is posixsem.
# For Apache 2.4 this option will be silently ignored.
# lsapi_mutex_mech posixsem

# Set alternate request body temporary files directory.
# Default is "/tmp"
# lsapi_tmpdir "/var/tmp"

# Change response codes from default ones
# Error codes should be in the range from 400 to 599
# Default values: 
#       500 (HTTP_INTERNAL_SERVER_ERROR) for SERVER_* and SCRIPT_*
#       503 (HTTP_SERVICE_UNAVAILABLE) for LSAPI_* and BACKEND_*
#       400 (HTTP_BAD_REQUEST) for CLIENT_*
# Some error with Document Root of Virtual Host
# lsapi_error_code SERVER_DOCROOT 500
# Cannot determine uid for the request
# lsapi_error_code SERVER_UID 500
# Some error with permissions of the script file
# lsapi_error_code SCRIPT_PERMS 500
# Error on creation of lsapi connection
# lsapi_error_code LSAPI_CREATE 503
# Internal error of liblsapi
# lsapi_error_code LSAPI_INTERNAL 503
# Error on acquiring backend connection
# lsapi_error_code LSAPI_CONN_ACQUIRE 503
# Error on determining backend connection
# lsapi_error_code LSAPI_CONN_DETERMINE 503
# Error on connecting to backend
# lsapi_error_code BACKEND_CONNECT 503
# Backend does not receive response headers
# lsapi_error_code BACKEND_NOHDRS 503
# Premature end of the response headers from backend
# lsapi_error_code BACKEND_ENDHDRS 503
# Error on sending request to backend
# lsapi_error_code BACKEND_SENDREQ 503
# Error on receiving response header from backend
# lsapi_error_code BACKEND_RECVHDR 503
# Error on receiving response from backend
# lsapi_error_code BACKEND_RECVRSP 503
# Error on ap_setup_client_block failed
# lsapi_error_code CLIENT_SETUP 400


</IfModule>
